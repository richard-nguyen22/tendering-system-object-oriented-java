package GUI;

import classes.Staff;
import classes.Admin;
import classes.Login;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AdminGUI extends javax.swing.JFrame {
  Staff admin = main.staff;
  /**
   * Creates new form Admin_Staff_View
   */
  public AdminGUI() {
    initComponents();
    staff_table.setAutoCreateRowSorter(true);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    delete_button = new javax.swing.JButton();
    add_button1 = new javax.swing.JButton();
    edit_button = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    staff_table = new javax.swing.JTable();
    jLabel1 = new javax.swing.JLabel();
    show_all_button = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    id_field = new javax.swing.JTextField();
    search_button = new javax.swing.JButton();
    help_button = new javax.swing.JButton();
    logout_button = new javax.swing.JButton();
    log_button = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    delete_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    delete_button.setText("Delete staff");
    delete_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        delete_buttonActionPerformed(evt);
      }
    });

    add_button1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    add_button1.setText("Add staff");
    add_button1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        add_button1ActionPerformed(evt);
      }
    });

    edit_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    edit_button.setText("Edit staff");
    edit_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        edit_buttonActionPerformed(evt);
      }
    });

    staff_table.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
    staff_table.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "ID", "Name", "Role", "User Name", "Password", "Address", "Phone"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
      };
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, true, true
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    staff_table.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        staff_tableMouseClicked(evt);
      }
    });
    jScrollPane2.setViewportView(staff_table);

    jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("ADMIN MAIN MENU");

    show_all_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    show_all_button.setText("Show all");
    show_all_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        show_all_buttonActionPerformed(evt);
      }
    });

    jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel2.setText("Staff ID:");

    id_field.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    search_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    search_button.setText("Search Staff");
    search_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        search_buttonActionPerformed(evt);
      }
    });

    help_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    help_button.setText("Help");
    help_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        help_buttonActionPerformed(evt);
      }
    });

    logout_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    logout_button.setText("Logout");
    logout_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        logout_buttonActionPerformed(evt);
      }
    });

    log_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    log_button.setText("View log");
    log_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        log_buttonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addComponent(add_button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(show_all_button, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
          .addComponent(help_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(edit_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(log_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
              .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
              .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
              .addComponent(search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addGap(0, 24, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(18, 18, 18)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(17, 17, 17)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(show_all_button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(add_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(edit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(11, 11, 11)
            .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(log_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(help_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void add_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_button1ActionPerformed
    // TODO add your handling code here:
    AdminAdd add_staff = new AdminAdd();
    add_staff.setLocationRelativeTo(null);
    add_staff.setVisible(true);
    this.dispose();
  }//GEN-LAST:event_add_button1ActionPerformed

  private void edit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_buttonActionPerformed
    // TODO add your handling code here:
    AdminEdit edit_staff = new AdminEdit();
    edit_staff.setLocationRelativeTo(null);
    edit_staff.setVisible(true);
    this.dispose();
  }//GEN-LAST:event_edit_buttonActionPerformed

  private void staff_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_tableMouseClicked
    // TODO add your handling code here:
    
  }//GEN-LAST:event_staff_tableMouseClicked

  private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
    // TODO add your handling code here:
    DefaultTableModel model = (DefaultTableModel) staff_table.getModel();
    if (staff_table.getSelectedRow() == -1) {
      if (staff_table.getRowCount() == 0) {
        JOptionPane.showMessageDialog(null, "There is no staff in the table");
      } else {
        JOptionPane.showMessageDialog(null, "Select a staff in the table to delete");
      }      
    } else {
      String delete_ID = staff_table.getValueAt(staff_table.getSelectedRow(), 0)+"";
      int dialog_button = JOptionPane.YES_NO_OPTION;
      int dialog_result = JOptionPane.showConfirmDialog(null, "Do you want to delete the staff?","Delete confirmation",dialog_button);
      if (dialog_result == 0) {
        model.removeRow(staff_table.getSelectedRow());
        ((Admin) admin).deleteStaff(delete_ID);
      } 
    }
  }//GEN-LAST:event_delete_buttonActionPerformed

  private void show_all_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_all_buttonActionPerformed
    // TODO add your handling code here:
    showStaffTable(((Admin) admin).findStaff("all"));    
  }//GEN-LAST:event_show_all_buttonActionPerformed

  private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
    // TODO add your handling code here:
    if (id_field.getText().equals("")) {
      JOptionPane.showMessageDialog(null, "Enter staff ID to search");
      return;
    } 
    List<String> found_staff = ((Admin) admin).findStaff(id_field.getText());
    if (found_staff.isEmpty()) {
      JOptionPane.showMessageDialog(null, "Cannot find staff ID: "+id_field.getText());
      showStaffTable(null);
      return;
    }
    showStaffTable(found_staff);

  }//GEN-LAST:event_search_buttonActionPerformed

  private void help_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_buttonActionPerformed
    // TODO add your handling code here:
    String help = "";
    help += "  - Search: Enter a staff ID to search\n\n";
    help += "  - Show all: Show all staff \n\n";
    help += "  - Add staff: Add new staff\n\n";
    help += "  - Edit staff: Edit staff information\n\n";
    help += "  - Delete staff: Delete a chosen staff from the table\n\n";
    help += "  - View log: View login and logout record of all users\n";
    JOptionPane.showMessageDialog(null, help, "Manage staff help", WIDTH);
  }//GEN-LAST:event_help_buttonActionPerformed

  private void logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_buttonActionPerformed
    // TODO add your handling code here:
    Login.recordLog(main.staff.getUserName(), "out");
    LoginGUI new_GUI = new LoginGUI();
    this.dispose();
    new_GUI.setLocationRelativeTo(null);
    new_GUI.setVisible(true);
  }//GEN-LAST:event_logout_buttonActionPerformed

  private void log_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log_buttonActionPerformed
    AdminLog new_GUI = new AdminLog();
    new_GUI.setVisible(true);
    this.dispose();
  }//GEN-LAST:event_log_buttonActionPerformed

  private void showStaffTable(List<String> staff_list) {    
    DefaultTableModel model = (DefaultTableModel) staff_table.getModel();
    String[] cols = {"ID", "Name", "Role", "User Name", "Password", "Address", "Phone"};
    if (staff_list == null) {
      model.setRowCount(0);
    } else if (staff_list.size() > 1) {
      String[][] rows = new String[staff_list.size()][7];
      int row_count = 0;
      for (String tender: staff_list) {
        rows[row_count] = tender.split("!");
        row_count++;
      }
      model.setDataVector(rows, cols);
    }
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton add_button1;
  private javax.swing.JButton delete_button;
  private javax.swing.JButton edit_button;
  private javax.swing.JButton help_button;
  private javax.swing.JTextField id_field;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton log_button;
  private javax.swing.JButton logout_button;
  private javax.swing.JButton search_button;
  private javax.swing.JButton show_all_button;
  private javax.swing.JTable staff_table;
  // End of variables declaration//GEN-END:variables
}
