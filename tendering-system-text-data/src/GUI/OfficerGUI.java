package GUI;

import classes.Login;
import classes.Officer;
import classes.Staff;
import classes.Tender;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class OfficerGUI extends javax.swing.JFrame {
  Staff officer = main.staff;
  /**
   * Creates new form OfficerGUI
   */
  public OfficerGUI() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    add_button = new javax.swing.JButton();
    delete_button = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    tender_products_table = new javax.swing.JTable();
    jLabel2 = new javax.swing.JLabel();
    tender_id_field = new javax.swing.JTextField();
    search_tender_button = new javax.swing.JButton();
    logout_button = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    products_list_table = new javax.swing.JTable();
    jLabel3 = new javax.swing.JLabel();
    keyword_field = new javax.swing.JTextField();
    search_products_button = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    product_id_field = new javax.swing.JTextField();
    quantity_field = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    tender_products_label1 = new javax.swing.JLabel();
    tender_id_label = new javax.swing.JLabel();
    name_label = new javax.swing.JLabel();
    price_label = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("OFFICER MAIN MENU");

    add_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    add_button.setText("Add product");
    add_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        add_buttonActionPerformed(evt);
      }
    });

    delete_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    delete_button.setText("Delete");
    delete_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        delete_buttonActionPerformed(evt);
      }
    });

    tender_products_table.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
    tender_products_table.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "ID", "Brand", "Model", "Type", "Discount Price (RM)", "Quantity"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jScrollPane1.setViewportView(tender_products_table);

    jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel2.setText("Tender ID:");

    tender_id_field.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    search_tender_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    search_tender_button.setText("Search Tender");
    search_tender_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        search_tender_buttonActionPerformed(evt);
      }
    });

    logout_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    logout_button.setText("Logout");
    logout_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        logout_buttonActionPerformed(evt);
      }
    });

    products_list_table.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
    products_list_table.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "ID", "Brand", "Model", "Type", "Original Price (RM)"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jScrollPane2.setViewportView(products_list_table);

    jLabel3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel3.setText("Keyword:");

    keyword_field.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    search_products_button.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    search_products_button.setText("Search Products");
    search_products_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        search_products_buttonActionPerformed(evt);
      }
    });

    jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel4.setText("Product ID:");

    product_id_field.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    quantity_field.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    jLabel5.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    jLabel5.setText("Quantity:");

    tender_products_label1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    tender_products_label1.setText("Products in products list");

    tender_id_label.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    tender_id_label.setText("Tender ID:  ");

    name_label.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    name_label.setText("Name:");

    price_label.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    price_label.setText("Total products price: RM");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(1, 1, 1)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tender_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(search_tender_button, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(tender_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(price_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
              .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                  .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(product_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(quantity_field, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(keyword_field, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(search_products_button))
          .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tender_products_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(21, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(20, 20, 20)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tender_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(search_tender_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(keyword_field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(search_products_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(tender_products_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(tender_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(price_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(product_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(quantity_field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(19, 19, 19))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
    // TODO add your handling code here:
    String tender_id = tender_id_label.getText().split(": ")[1], product_id = product_id_field.getText();
    String quantiry_str;
    if (tender_id.equals(" ")) {
      JOptionPane.showMessageDialog(null, "Search tendering request to add products in the left table first");
      return;
    } else if (products_list_table.getRowCount() == 0) {
      JOptionPane.showMessageDialog(null, "No products in the right table. Search product to check product ID");
      return;
    }
    if (product_id.equals("")) {
      JOptionPane.showMessageDialog(null, "No product ID to add. Enter product ID that is in the right table");
      return;
    } else {
      try {
        if (Integer.parseInt(product_id) < 1) {
          JOptionPane.showMessageDialog(null, "Invalid product ID");
          return;
        }
      } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid product ID");
        return;
      }    
    }
    DefaultTableModel model = (DefaultTableModel) products_list_table.getModel();
    int row_counts = model.getRowCount();
    boolean found_product = false;
    for (int i = 0; i <row_counts; i++) {
      if (model.getValueAt(i, 0).equals(product_id)) {
        found_product = true;
      }
    }
    if (!found_product) {
      JOptionPane.showMessageDialog(null, "Product ID: " + product_id + " is not in the right table");
      return;
    }
    quantiry_str = quantity_field.getText();
    if (quantiry_str.equals("")) {
      JOptionPane.showMessageDialog(null, "Enter the quantity of the product you want to add into tendering request");
      return;
    } else {
      try {
        if (Integer.parseInt(quantiry_str) < 1) {
          JOptionPane.showMessageDialog(null, "Invalid quantity");
          return;
        }
      } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid quantity");
        return;
      }    }
    int dialog_button = JOptionPane.YES_NO_OPTION;
    int dialog_result = JOptionPane.showConfirmDialog(null, "Do you want to add "+quantiry_str+" product ID: "+product_id+" in tender ID: "+tender_id,"Add confirmation",dialog_button);
    if (dialog_result == 0) {
      DefaultTableModel model2 = (DefaultTableModel) tender_products_table.getModel();
      String[] result = ((Officer) officer).addProductToTender(tender_id, product_id, Integer.parseInt(quantiry_str));
      String[] pieces = result[0].split("!");
      price_label.setText("Total products price: RM"+result[1]);
      row_counts = model2.getRowCount();
      found_product = false;
      for (int i = 0; i <row_counts; i++) {
        if (model2.getValueAt(i, 0).equals(product_id)) {
          model2.setValueAt(pieces[7], i, 5);
          found_product = true;
        }
      }
      if (found_product == false) {
        String[] new_row = {pieces[0], pieces[1], pieces[2], pieces[3], pieces[6], 
        pieces[7]};
        model2.insertRow(row_counts, new_row);
      }
      JOptionPane.showMessageDialog(null, quantiry_str+" product ID: "+product_id+" is added in tender ID: "+tender_id);
    } else {
      JOptionPane.showMessageDialog(null, quantiry_str+" product ID: "+product_id+" is not added in tender ID: "+tender_id);
    }
  }//GEN-LAST:event_add_buttonActionPerformed

  private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
    // TODO add your handling code here:
    DefaultTableModel model = (DefaultTableModel) tender_products_table.getModel();
    String tender_id = tender_id_label.getText().split(": ")[1];
    if (tender_id.equals(" ")) {
      JOptionPane.showMessageDialog(null, "No product to delete. Search tendering request first");
      return;
    }
    if (tender_products_table.getSelectedRow() == -1) {
      if (tender_products_table.getRowCount() == 0) {
        JOptionPane.showMessageDialog(null, "There is no product in tender id: "+tender_id);
      } else {
        JOptionPane.showMessageDialog(null, "Select a product in the table to delete");
      }
    } else {
      int dialog_button = JOptionPane.YES_NO_OPTION;
      String product_id = tender_products_table.getValueAt(tender_products_table.getSelectedRow(),0)+"";
      int dialog_result = JOptionPane.showConfirmDialog(null, "Do you want to delete product id: "+product_id+" from tender id: "+tender_id,"Delete confirmation",dialog_button);
      if (dialog_result == 0) {
        model.removeRow(tender_products_table.getSelectedRow());
        String new_price = ""+((Officer) officer).deleteProduct(tender_id, product_id);
        price_label.setText("Total products price: RM"+new_price);
      }
    }
  }//GEN-LAST:event_delete_buttonActionPerformed

  private void search_tender_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_tender_buttonActionPerformed
    // TODO add your handling code here:
    String id = tender_id_field.getText();
    if (id.equals("")) {
      JOptionPane.showMessageDialog(null, "Enter tender ID to search");
      return;
    } else {
      try {
        Integer.parseInt(id);
      } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "ID is not number. Enter ID as number");
        tender_id_label.setText("Tender ID: ");
        name_label.setText("Name: ");
        price_label.setText("Total products price: RM");
        return;
      }
      if (Integer.parseInt(id) <= 0) {
        JOptionPane.showMessageDialog(null, "Invalid ID");
        tender_id_label.setText("Tender ID: ");
        name_label.setText("Name: ");
        price_label.setText("Total products price: RM");
        return;
      }
    }
    Tender found_tender = ((Officer) officer).searchTender(id);
    if (found_tender == null) {
      JOptionPane.showMessageDialog(null, "Cannot find tender ID: " + id);
      showTenderProducts(new ArrayList<>());
      tender_id_label.setText("Tender ID: ");
      name_label.setText("Name: ");
      price_label.setText("Total products price: RM");
      return;
    }
    List<String> products = ((Officer) officer).getTenderProducts(found_tender.getID() +"");
    if (products.isEmpty()) {
      JOptionPane.showMessageDialog(null, "There is no product in tender ID: " + id);
    }
    tender_id_label.setText("Tender ID: " + id);
    name_label.setText("Name: " + found_tender.getName());
    price_label.setText("Total products price: RM" + found_tender.getTenderPrice());
    showTenderProducts(products);
  }//GEN-LAST:event_search_tender_buttonActionPerformed

  private void showTenderProducts(List<String> tender_products) {
    DefaultTableModel model = (DefaultTableModel) tender_products_table.getModel();
    String[] cols = {"ID", "Brand", "Model", "Type", "Discount Price (RM)", "Quantity"};
    if (tender_products.isEmpty()) {
      String[][] rows = new String[0][7];
      model.setDataVector(rows, cols);
    } else {
      String[][] rows = new String[tender_products.size()][7];
      int row_count = 0;
      for (String tender: tender_products) {
        String[] pieces = tender.split("!");
        rows[row_count] = new String[] {pieces[0], pieces[1], pieces[2], pieces[3], pieces[6], pieces[7]};
        row_count++;
      }
      model.setDataVector(rows, cols);
    }
  }

  private void logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_buttonActionPerformed
    // TODO add your handling code here:
    Login.recordLog(main.staff.getUserName(), "out");
    this.dispose();
    LoginGUI new_GUI = new LoginGUI();
    new_GUI.setLocationRelativeTo(null);
    new_GUI.setVisible(true);
  }//GEN-LAST:event_logout_buttonActionPerformed

  private void search_products_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_products_buttonActionPerformed
    // TODO add your handling code here:
    if (keyword_field.getText().equals("")) {
      JOptionPane.showMessageDialog(null, "No search keyword. Enter product brand, model or type to search");
    } else {
      showProducts(keyword_field.getText());
    }    
  }//GEN-LAST:event_search_products_buttonActionPerformed

  private void showProducts(String keyword) {
    List<String> found_products = ((Officer) officer).searchProduct(keyword);
    DefaultTableModel model = (DefaultTableModel) products_list_table.getModel();
    String[] cols = {"ID", "Brand", "Model", "Type", "Price (RM)"};
    String[][] rows = new String[0][7];
    if (found_products.isEmpty()) {
      JOptionPane.showMessageDialog(null, "Cannot find product");
    } else {
      int row_count = 0;
      rows = new String[found_products.size()][5];
      for (String product: found_products) {
          rows[row_count] = product.split("!");
          row_count++;
      }    
    }
    model.setDataVector(rows, cols);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton add_button;
  private javax.swing.JButton delete_button;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextField keyword_field;
  private javax.swing.JButton logout_button;
  private javax.swing.JLabel name_label;
  private javax.swing.JLabel price_label;
  private javax.swing.JTextField product_id_field;
  private javax.swing.JTable products_list_table;
  private javax.swing.JTextField quantity_field;
  private javax.swing.JButton search_products_button;
  private javax.swing.JButton search_tender_button;
  private javax.swing.JTextField tender_id_field;
  private javax.swing.JLabel tender_id_label;
  private javax.swing.JLabel tender_products_label1;
  private javax.swing.JTable tender_products_table;
  // End of variables declaration//GEN-END:variables
}
